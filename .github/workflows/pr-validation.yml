name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Check code formatting
      run: |
        echo "Checking code formatting..."
        # Add prettier check if you have it configured
        # npm run format:check
        
    - name: Run ESLint with annotations
      run: npm run lint
      continue-on-error: true
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        if grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules; then
          echo "‚ö†Ô∏è Found TODO/FIXME comments in the code"
          echo "Please review and address these before merging"
        else
          echo "‚úÖ No TODO/FIXME comments found"
        fi
        
    - name: Build application
      run: npm run build
      
    - name: Check bundle size
      run: |
        echo "Checking bundle size..."
        du -sh dist/
        find dist/ -name "*.js" -exec du -h {} \; | sort -hr
        
    - name: Security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check dependencies
      run: |
        echo "Checking for outdated dependencies..."
        npm outdated || true
        
    - name: Validate package.json
      run: |
        echo "Validating package.json..."
        node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
        echo "‚úÖ package.json is valid"
        
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Get build size info
          const { execSync } = require('child_process');
          const buildSize = execSync('du -sh dist/').toString().trim();
          
          const comment = `## üöÄ PR Validation Results
          
          ‚úÖ **Build Status**: Successful
          üì¶ **Bundle Size**: ${buildSize}
          üîç **Type Check**: Passed
          üõ°Ô∏è **Security Audit**: Completed
          
          This PR has been automatically validated and is ready for review!
          
          ---
          *Generated by GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  lighthouse:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build application
      run: npm run build
      
    - name: Serve built application
      run: |
        npm install -g serve
        serve -s dist -p 3000 &
        sleep 5
        
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun --upload.target=temporary-public-storage
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}